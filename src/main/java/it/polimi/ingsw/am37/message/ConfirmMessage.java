package it.polimi.ingsw.am37.message;

/**
 * General confirm message. Used by server when no other more specific replays are suitable to choose that requested
 * action have been performed successfully. Generally this should be used to confirm a correct login or the creation of
 * a lobby. This message should not been used when errors have been generated by previous actions, use instead
 * {@link ErrorMessage}.
 */
public class ConfirmMessage extends Message {
    private final static int LOBBY_ID_NOT_SET = -1;

    /**
     * The joined lobby id, in case this message is sent as confirm for a LobbyRequest message; in other cases, should be -1 when not
     * used or set.
     */
    private final int lobbyId;

    /**
     * The fromJSON receiver side constructor where all data are accessible
     *
     * @param UUID    the sender identifier
     * @param lobbyId the id of the lobby joined by the player
     */
    public ConfirmMessage(String UUID, int lobbyId) {
        super(UUID, MessageType.CONFIRM);
        this.lobbyId = lobbyId;
    }

    /**
     * The fromJSON receiver side simple constructor to only provide an empty message
     *
     * @param UUID the sender identifier
     */
    public ConfirmMessage(String UUID) {
        super(UUID, MessageType.CONFIRM);
        this.lobbyId = LOBBY_ID_NOT_SET;
    }

    /**
     * The default constructor for message preparing. UUID must be set using {@link Message#setUUID(String)} before
     * sending it
     *
     * @param lobbyId the id of the lobby joined by the player
     */
    public ConfirmMessage(int lobbyId) {
        super(MessageType.CONFIRM);
        this.lobbyId = lobbyId;
    }

    /**
     * The constructor for message preparing without any additional field. UUID must be set using
     * {@link Message#setUUID(String)} before sending it
     */
    public ConfirmMessage() {
        super(MessageType.CONFIRM);
        this.lobbyId = LOBBY_ID_NOT_SET;
    }

    /**
     * @return the joined lobby id or -1 when not set or used
     */
    public int getLobbyId() {
        return lobbyId;
    }
}
